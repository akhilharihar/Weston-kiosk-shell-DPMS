/* Generated by wayland-scanner 1.21.0 */

#ifndef KIOSK_SHELL_DPMS_MANAGEMENT_CLIENT_PROTOCOL_H
#define KIOSK_SHELL_DPMS_MANAGEMENT_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_kiosk_shell_dpms_management The kiosk_shell_dpms_management protocol
 * @section page_ifaces_kiosk_shell_dpms_management Interfaces
 * - @subpage page_iface_kiosk_shell_dpms_manager - turn display on and off
 */
struct kiosk_shell_dpms_manager;

#ifndef KIOSK_SHELL_DPMS_MANAGER_INTERFACE
#define KIOSK_SHELL_DPMS_MANAGER_INTERFACE
/**
 * @page page_iface_kiosk_shell_dpms_manager kiosk_shell_dpms_manager
 * @section page_iface_kiosk_shell_dpms_manager_desc Description
 * @section page_iface_kiosk_shell_dpms_manager_api API
 * See @ref iface_kiosk_shell_dpms_manager.
 */
/**
 * @defgroup iface_kiosk_shell_dpms_manager The kiosk_shell_dpms_manager interface
 */
extern const struct wl_interface kiosk_shell_dpms_manager_interface;
#endif

#define KIOSK_SHELL_DPMS_MANAGER_SET_MODE 0


/**
 * @ingroup iface_kiosk_shell_dpms_manager
 */
#define KIOSK_SHELL_DPMS_MANAGER_SET_MODE_SINCE_VERSION 1

/** @ingroup iface_kiosk_shell_dpms_manager */
static inline void
kiosk_shell_dpms_manager_set_user_data(struct kiosk_shell_dpms_manager *kiosk_shell_dpms_manager, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) kiosk_shell_dpms_manager, user_data);
}

/** @ingroup iface_kiosk_shell_dpms_manager */
static inline void *
kiosk_shell_dpms_manager_get_user_data(struct kiosk_shell_dpms_manager *kiosk_shell_dpms_manager)
{
	return wl_proxy_get_user_data((struct wl_proxy *) kiosk_shell_dpms_manager);
}

static inline uint32_t
kiosk_shell_dpms_manager_get_version(struct kiosk_shell_dpms_manager *kiosk_shell_dpms_manager)
{
	return wl_proxy_get_version((struct wl_proxy *) kiosk_shell_dpms_manager);
}

/** @ingroup iface_kiosk_shell_dpms_manager */
static inline void
kiosk_shell_dpms_manager_destroy(struct kiosk_shell_dpms_manager *kiosk_shell_dpms_manager)
{
	wl_proxy_destroy((struct wl_proxy *) kiosk_shell_dpms_manager);
}

/**
 * @ingroup iface_kiosk_shell_dpms_manager
 */
static inline void
kiosk_shell_dpms_manager_set_mode(struct kiosk_shell_dpms_manager *kiosk_shell_dpms_manager, uint32_t mode)
{
	wl_proxy_marshal_flags((struct wl_proxy *) kiosk_shell_dpms_manager,
			 KIOSK_SHELL_DPMS_MANAGER_SET_MODE, NULL, wl_proxy_get_version((struct wl_proxy *) kiosk_shell_dpms_manager), 0, mode);
}

#ifdef  __cplusplus
}
#endif

#endif
